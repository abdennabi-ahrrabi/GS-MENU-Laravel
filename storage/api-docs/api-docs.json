{
    "openapi": "3.0.0",
    "info": {
        "title": "My API",
        "version": "1.0"
    },
    "paths": {
        "/api/admins": {
            "get": {
                "tags": [
                    "Admin"
                ],
                "summary": "List of Admins",
                "description": "Multiple status values can be provided with comma separated string",
                "operationId": "27f6447f654b54ee491274c73668fa10",
                "responses": {
                    "200": {
                        "description": "successful operation"
                    },
                    "400": {
                        "description": "Invalid status value"
                    }
                }
            }
        },
        "/api/admins/register": {
            "post": {
                "tags": [
                    "Admin"
                ],
                "summary": "Create Admin",
                "operationId": "030392af54b96e99a21d62b9cce7f86f",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "": {
                                        "properties": {
                                            "email": {
                                                "type": "string"
                                            },
                                            "username": {
                                                "type": "string"
                                            },
                                            "password": {
                                                "type": "string"
                                            }
                                        },
                                        "type": "object"
                                    }
                                },
                                "type": "object",
                                "example": {
                                    "email": "Ahrrabi@example.com",
                                    "username": "admin",
                                    "password": "Ahrrabi1234"
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "id": {
                                            "type": "number",
                                            "example": 1
                                        },
                                        "email": {
                                            "type": "string",
                                            "example": "admin@example.com"
                                        },
                                        "username": {
                                            "type": "string",
                                            "example": "admin"
                                        },
                                        "password": {
                                            "type": "string",
                                            "example": "$2y$10$Gs3IpiZd4KkmyVF8tSI55ujEoAKe0.eXqQK.QklsERNMHbtfqR2uq"
                                        },
                                        "updated_at": {
                                            "type": "string",
                                            "example": "2021-12-11T09:25:53.000000Z"
                                        },
                                        "created_at": {
                                            "type": "string",
                                            "example": "2021-12-11T09:25:53.000000Z"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "invalid",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "msg": {
                                            "type": "string",
                                            "example": "fail"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/admins/login": {
            "post": {
                "tags": [
                    "Admin"
                ],
                "summary": "Login",
                "operationId": "a6f00a3382b138008f0d15030d5375fd",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "": {
                                        "properties": {
                                            "email": {
                                                "description": "Email address of the admin",
                                                "type": "string"
                                            },
                                            "password": {
                                                "description": "Password of the admin",
                                                "type": "string"
                                            }
                                        },
                                        "type": "object"
                                    }
                                },
                                "type": "object",
                                "example": {
                                    "email": "Ahrrabi@example.com",
                                    "password": "Ahrrabi1234"
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "token": {
                                            "type": "string",
                                            "example": "true"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "invalid",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "Unauthorized"
                                        },
                                        "email": {
                                            "type": "array",
                                            "items": {
                                                "type": "string",
                                                "example": "The email field is required."
                                            }
                                        },
                                        "password": {
                                            "type": "array",
                                            "items": {
                                                "type": "string",
                                                "example": "The password field is required."
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/admins/update/{admin}": {
            "put": {
                "tags": [
                    "Admin"
                ],
                "summary": "Update Admin",
                "operationId": "73d359361bb911cb9070cc0fde357bcd",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "": {
                                        "properties": {
                                            "email": {
                                                "type": "string"
                                            },
                                            "username": {
                                                "type": "string"
                                            },
                                            "password": {
                                                "type": "string"
                                            }
                                        },
                                        "type": "object"
                                    }
                                },
                                "type": "object",
                                "example": {
                                    "email": "abdou@gmail.com",
                                    "username": "adbo.ah",
                                    "password": "password"
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "id": {
                                            "type": "number",
                                            "example": 5
                                        },
                                        "email": {
                                            "type": "string",
                                            "example": "abdou@gmail.com"
                                        },
                                        "username": {
                                            "type": "string",
                                            "example": "admin"
                                        },
                                        "password": {
                                            "type": "string",
                                            "example": "adbo.ah"
                                        },
                                        "updated_at": {
                                            "type": "string",
                                            "example": "2022-12-28T21:23:09.000000Z"
                                        },
                                        "created_at": {
                                            "type": "string",
                                            "example": "2022-12-28T21:34:47.000000Z"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/admins/delete/{admin}": {
            "delete": {
                "tags": [
                    "Admin"
                ],
                "summary": "Delete Admin",
                "operationId": "8d4028743fb30861d1bc542c0883800f",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "msg": {
                                            "type": "string",
                                            "example": "delete admin success"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/categories": {
            "get": {
                "tags": [
                    "Categories"
                ],
                "summary": "List of Categories",
                "description": "Multiple status values can be provided with comma separated string",
                "operationId": "3f5817a34833d0a1f4af4548dd3aeaba",
                "responses": {
                    "200": {
                        "description": "successful operation"
                    },
                    "400": {
                        "description": "Invalid status value"
                    }
                }
            }
        },
        "/api/categories/all": {
            "get": {
                "tags": [
                    "Categories"
                ],
                "summary": "All Categories - Publicly Accessible",
                "description": "All Categories - Publicly Accessible",
                "operationId": "4bed95b28edd0bfe728f3ea0684ee1f0",
                "parameters": [
                    {
                        "name": "perPage",
                        "in": "query",
                        "description": "perPage, eg; 20",
                        "schema": {
                            "type": "integer"
                        },
                        "example": 20
                    }
                ],
                "responses": {
                    "200": {
                        "description": "All Categories - Publicly Accessible"
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "404": {
                        "description": "Resource Not Found"
                    }
                }
            }
        },
        "/api/categories/search": {
            "get": {
                "tags": [
                    "Categories"
                ],
                "summary": "All Categories - Publicly Accessible",
                "description": "All Categories - Publicly Accessible",
                "operationId": "6b9de7e2a60db560dbc4e473dccdd6b6",
                "parameters": [
                    {
                        "name": "perPage",
                        "in": "query",
                        "description": "perPage, eg; 20",
                        "schema": {
                            "type": "integer"
                        },
                        "example": 20
                    },
                    {
                        "name": "search",
                        "in": "query",
                        "description": "search, eg; Test",
                        "schema": {
                            "type": "string"
                        },
                        "example": "Test"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "All Categories - Publicly Accessible"
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "404": {
                        "description": "Resource Not Found"
                    }
                }
            }
        },
        "/api/categories/store": {
            "post": {
                "tags": [
                    "Categories"
                ],
                "summary": "Create a Category",
                "operationId": "a09cc03db6b82ad0df1874e4fd92d2ed",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "": {
                                        "properties": {
                                            "name": {
                                                "description": "Name of the category",
                                                "type": "string"
                                            },
                                            "restauant_id": {
                                                "description": "ID of the restaurant who have this category",
                                                "type": "integer"
                                            }
                                        },
                                        "type": "object"
                                    }
                                },
                                "type": "object",
                                "example": {
                                    "name": "Pizza",
                                    "restaurant_id": 2
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "id": {
                                            "type": "integer",
                                            "example": 1
                                        },
                                        "name": {
                                            "type": "string",
                                            "example": "Pizza"
                                        },
                                        "restarant_id": {
                                            "type": "integer",
                                            "example": 2
                                        },
                                        "updated_at": {
                                            "type": "string",
                                            "example": "2023-01-11T09:25:53.000000Z"
                                        },
                                        "created_at": {
                                            "type": "string",
                                            "example": "2023-01-11T09:25:53.000000Z"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "invalid",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "msg": {
                                            "type": "string",
                                            "example": "fail"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/categories/show/{id}": {
            "get": {
                "tags": [
                    "Categories"
                ],
                "summary": "Get a Category",
                "operationId": "3f32348e47f4eed3a77d79be5b834f35",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "id": {
                                            "type": "integer",
                                            "example": 1
                                        },
                                        "name": {
                                            "type": "string",
                                            "example": "Category 1"
                                        },
                                        "restaurant_id": {
                                            "type": "integer",
                                            "example": 1
                                        },
                                        "created_at": {
                                            "type": "string",
                                            "example": "2023-01-01T22:45:03.000000Z"
                                        },
                                        "updated_at": {
                                            "type": "string",
                                            "example": "2023-01-01T22:45:03.000000Z"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "invalid",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "msg": {
                                            "type": "string",
                                            "example": "fail"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/categories/update/{id}": {
            "put": {
                "tags": [
                    "Categories"
                ],
                "summary": "Update Category",
                "description": "Update Category",
                "operationId": "d68d3691389e60378bb9391c6c7f7b34",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "id, eg; 1",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "title": {
                                        "type": "string",
                                        "example": "Category 1"
                                    },
                                    "resataurant_id": {
                                        "type": "integer",
                                        "example": 2
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Update Product"
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "404": {
                        "description": "Resource Not Found"
                    }
                },
                "security": [
                    {
                        "bearer": []
                    }
                ]
            }
        },
        "/api/categories/delete/{id}": {
            "delete": {
                "tags": [
                    "Categories"
                ],
                "summary": "Delete a Category",
                "operationId": "02254b86bf57dd4ea774b6fab8a6fd92",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "success"
                    },
                    "400": {
                        "description": "invalid",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "msg": {
                                            "type": "string",
                                            "example": "fail"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/products": {
            "get": {
                "tags": [
                    "Products"
                ],
                "summary": "Get Product List",
                "description": "Get Product List as Array",
                "operationId": "index",
                "responses": {
                    "200": {
                        "description": "Get Product List as Array"
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "404": {
                        "description": "Resource Not Found"
                    }
                },
                "security": [
                    {
                        "bearer": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Products"
                ],
                "summary": "Create New Product",
                "description": "Create New Product",
                "operationId": "store",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "title": {
                                        "type": "string",
                                        "example": "Product 1"
                                    },
                                    "description": {
                                        "type": "string",
                                        "example": "Description"
                                    },
                                    "price": {
                                        "type": "integer",
                                        "example": 10120
                                    },
                                    "image": {
                                        "type": "string",
                                        "example": ""
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Create New Product"
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "404": {
                        "description": "Resource Not Found"
                    }
                },
                "security": [
                    {
                        "bearer": []
                    }
                ]
            }
        },
        "/api/products/all": {
            "get": {
                "tags": [
                    "Products"
                ],
                "summary": "All Products - Publicly Accessible",
                "description": "All Products - Publicly Accessible",
                "operationId": "indexAll",
                "parameters": [
                    {
                        "name": "perPage",
                        "in": "query",
                        "description": "perPage, eg; 20",
                        "schema": {
                            "type": "integer"
                        },
                        "example": 20
                    }
                ],
                "responses": {
                    "200": {
                        "description": "All Products - Publicly Accessible"
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "404": {
                        "description": "Resource Not Found"
                    }
                }
            }
        },
        "/api/products/search": {
            "get": {
                "tags": [
                    "Products"
                ],
                "summary": "All Products - Publicly Accessible",
                "description": "All Products - Publicly Accessible",
                "operationId": "search",
                "parameters": [
                    {
                        "name": "perPage",
                        "in": "query",
                        "description": "perPage, eg; 20",
                        "schema": {
                            "type": "integer"
                        },
                        "example": 20
                    },
                    {
                        "name": "search",
                        "in": "query",
                        "description": "search, eg; Test",
                        "schema": {
                            "type": "string"
                        },
                        "example": "Test"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "All Products - Publicly Accessible"
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "404": {
                        "description": "Resource Not Found"
                    }
                }
            }
        },
        "/api/products/{id}": {
            "get": {
                "tags": [
                    "Products"
                ],
                "summary": "Show Product Details",
                "description": "Show Product Details",
                "operationId": "show",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "id, eg; 1",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Show Product Details"
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "404": {
                        "description": "Resource Not Found"
                    }
                },
                "security": [
                    {
                        "bearer": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "Products"
                ],
                "summary": "Update Product",
                "description": "Update Product",
                "operationId": "update",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "id, eg; 1",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "title": {
                                        "type": "string",
                                        "example": "Product 1"
                                    },
                                    "description": {
                                        "type": "string",
                                        "example": "Description"
                                    },
                                    "price": {
                                        "type": "integer",
                                        "example": 10120
                                    },
                                    "image": {
                                        "type": "string",
                                        "example": ""
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Update Product"
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "404": {
                        "description": "Resource Not Found"
                    }
                },
                "security": [
                    {
                        "bearer": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Products"
                ],
                "summary": "Delete Product",
                "description": "Delete Product",
                "operationId": "destroy",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "id, eg; 1",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Delete Product"
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "404": {
                        "description": "Resource Not Found"
                    }
                },
                "security": [
                    {
                        "bearer": []
                    }
                ]
            }
        },
        "/api/restaurants": {
            "get": {
                "tags": [
                    "Restaurants"
                ],
                "summary": "List of Restaurants",
                "description": "Multiple status values can be provided with comma separated string",
                "operationId": "0ef65917394f8eb77311d1d085ff31e4",
                "responses": {
                    "200": {
                        "description": "successful operation"
                    },
                    "400": {
                        "description": "Invalid status value"
                    }
                }
            }
        },
        "/api/restaurants/all": {
            "get": {
                "tags": [
                    "Restaurants"
                ],
                "summary": "All Restaurants - Publicly Accessible",
                "description": "All Restaurants - Publicly Accessible",
                "operationId": "0e390501c6147527b627735cf517bcfc",
                "parameters": [
                    {
                        "name": "perPage",
                        "in": "query",
                        "description": "perPage, eg; 20",
                        "schema": {
                            "type": "integer"
                        },
                        "example": 20
                    }
                ],
                "responses": {
                    "200": {
                        "description": "All Restaurants - Publicly Accessible"
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "404": {
                        "description": "Resource Not Found"
                    }
                }
            }
        },
        "/api/restaurants/search": {
            "get": {
                "tags": [
                    "Restaurants"
                ],
                "summary": "All Restaurants - Publicly Accessible",
                "description": "All Restaurants - Publicly Accessible",
                "operationId": "b54700b170fad1c9280cb8a2cc00eef3",
                "parameters": [
                    {
                        "name": "perPage",
                        "in": "query",
                        "description": "perPage, eg; 20",
                        "schema": {
                            "type": "integer"
                        },
                        "example": 20
                    },
                    {
                        "name": "search",
                        "in": "query",
                        "description": "search, eg; Test",
                        "schema": {
                            "type": "string"
                        },
                        "example": "Test"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "All Restaurants - Publicly Accessible"
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "404": {
                        "description": "Resource Not Found"
                    }
                }
            }
        },
        "/api/restaurants/store": {
            "post": {
                "tags": [
                    "Restaurants"
                ],
                "summary": "Create a Restaurant",
                "operationId": "9d2cb3c8a9c036f238ac4c9b5d65a8b0",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "": {
                                        "properties": {
                                            "name": {
                                                "description": "Name of the restaurant",
                                                "type": "string"
                                            },
                                            "Location": {
                                                "description": "Location of the restaurant",
                                                "type": "string"
                                            },
                                            "Address": {
                                                "description": "Adress of the restaurant's address",
                                                "type": "string"
                                            },
                                            "Phone Number": {
                                                "description": "Phone Number of the restaurant",
                                                "type": "string"
                                            },
                                            "Description": {
                                                "description": "City in which the restaurant is located",
                                                "type": "string"
                                            },
                                            "user_id": {
                                                "description": "ID of the user who owns the restaurant",
                                                "type": "integer"
                                            }
                                        },
                                        "type": "object"
                                    }
                                },
                                "type": "object",
                                "example": {
                                    "name": "KFC",
                                    "location": "LA",
                                    "address": "123 ST PARIS",
                                    "telephone": "123-456-7890",
                                    "phone_number": "555-555-5555",
                                    "description": "Fried chicken specialist",
                                    "user_id": 1
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "id": {
                                            "type": "integer",
                                            "example": 1
                                        },
                                        "name": {
                                            "type": "string",
                                            "example": "KFC"
                                        },
                                        "Location": {
                                            "type": "string",
                                            "example": "LA"
                                        },
                                        "Address": {
                                            "type": "string",
                                            "example": "123 ST PARIS"
                                        },
                                        "Phone Number": {
                                            "type": "string",
                                            "example": "555-555-5555"
                                        },
                                        "Description": {
                                            "type": "string",
                                            "example": "Fried chicken specialist"
                                        },
                                        "updated_at": {
                                            "type": "string",
                                            "example": "2023-01-15T15:25:53.000000Z"
                                        },
                                        "created_at": {
                                            "type": "string",
                                            "example": "2023-01-15T15:25:53.000000Z"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "invalid",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "msg": {
                                            "type": "string",
                                            "example": "fail"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/restaurants/show/{id}": {
            "get": {
                "tags": [
                    "Restaurants"
                ],
                "summary": "Get a Restaurant",
                "operationId": "9c1f8a2e091fedf8b9dfa805da8520f9",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "id": {
                                            "type": "integer",
                                            "example": 1
                                        },
                                        "name": {
                                            "type": "string",
                                            "example": "KFC"
                                        },
                                        "Location": {
                                            "type": "string",
                                            "example": "LA"
                                        },
                                        "Address": {
                                            "type": "string",
                                            "example": "123 ST PARIS"
                                        },
                                        "Phone Number": {
                                            "type": "string",
                                            "example": "555-555-5555"
                                        },
                                        "Description": {
                                            "type": "string",
                                            "example": "Fried chicken specialist"
                                        },
                                        "updated_at": {
                                            "type": "string",
                                            "example": "2023-01-15T15:25:53.000000Z"
                                        },
                                        "created_at": {
                                            "type": "string",
                                            "example": "2023-01-15T15:25:53.000000Z"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "invalid",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "msg": {
                                            "type": "string",
                                            "example": "fail"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/restaurants/update/{id}": {
            "put": {
                "tags": [
                    "Restaurants"
                ],
                "summary": "Update Restaurant",
                "description": "Update Restaurant",
                "operationId": "f5454aa882cf317f52bde0f774ada276",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "id, eg; 1",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "id": {
                                        "type": "integer",
                                        "example": 1
                                    },
                                    "name": {
                                        "type": "string",
                                        "example": "KFC"
                                    },
                                    "Location": {
                                        "type": "string",
                                        "example": "LA"
                                    },
                                    "Address": {
                                        "type": "string",
                                        "example": "123 ST PARIS"
                                    },
                                    "Phone Number": {
                                        "type": "string",
                                        "example": "555-555-5555"
                                    },
                                    "Description": {
                                        "type": "string",
                                        "example": "Fried chicken specialist"
                                    },
                                    "updated_at": {
                                        "type": "string",
                                        "example": "2023-01-15T15:25:53.000000Z"
                                    },
                                    "created_at": {
                                        "type": "string",
                                        "example": "2023-01-15T15:25:53.000000Z"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Update Restaurant"
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "404": {
                        "description": "Resource Not Found"
                    }
                },
                "security": [
                    {
                        "bearer": []
                    }
                ]
            }
        },
        "/api/restaurants/delete/{id}": {
            "delete": {
                "tags": [
                    "Restaurants"
                ],
                "summary": "Delete a Restaurant",
                "operationId": "f6781cddca299991a0feb6d9cdca837d",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "success"
                    },
                    "400": {
                        "description": "invalid",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "msg": {
                                            "type": "string",
                                            "example": "fail"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/subcategories": {
            "get": {
                "tags": [
                    "Subcategories"
                ],
                "summary": "List of Subcategories",
                "description": "Multiple status values can be provided with comma separated string",
                "operationId": "329bf50ac12550f84d6a70f7523dbffa",
                "responses": {
                    "200": {
                        "description": "successful operation"
                    },
                    "400": {
                        "description": "Invalid status value"
                    }
                }
            }
        },
        "/api/subcategories/all": {
            "get": {
                "tags": [
                    "Subcategories"
                ],
                "summary": "All Subcategories - Publicly Accessible",
                "description": "All Subcategories - Publicly Accessible",
                "operationId": "9aad361ae4f809c768f7a59d6777e140",
                "parameters": [
                    {
                        "name": "perPage",
                        "in": "query",
                        "description": "perPage, eg; 20",
                        "schema": {
                            "type": "integer"
                        },
                        "example": 20
                    }
                ],
                "responses": {
                    "200": {
                        "description": "All Subcategories - Publicly Accessible"
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "404": {
                        "description": "Resource Not Found"
                    }
                }
            }
        },
        "/api/subcategories/search": {
            "get": {
                "tags": [
                    "Subcategories"
                ],
                "summary": "All Subcategories - Publicly Accessible",
                "description": "All Subcategories - Publicly Accessible",
                "operationId": "91718f1f7ca0a5a87086236f5c835be5",
                "parameters": [
                    {
                        "name": "perPage",
                        "in": "query",
                        "description": "perPage, eg; 20",
                        "schema": {
                            "type": "integer"
                        },
                        "example": 20
                    },
                    {
                        "name": "search",
                        "in": "query",
                        "description": "search, eg; Test",
                        "schema": {
                            "type": "string"
                        },
                        "example": "Test"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "All Subcategories - Publicly Accessible"
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "404": {
                        "description": "Resource Not Found"
                    }
                }
            }
        },
        "/api/subcategories/store": {
            "post": {
                "tags": [
                    "Subcategories"
                ],
                "summary": "Create a SubCategory",
                "operationId": "1371caf6e25ea5626c0cdec6803a23f5",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "": {
                                        "properties": {
                                            "name": {
                                                "description": "Name of the subcategory",
                                                "type": "string"
                                            },
                                            "Parent_Category_id": {
                                                "description": "ID of the category who have this subcategory",
                                                "type": "integer"
                                            }
                                        },
                                        "type": "object"
                                    }
                                },
                                "type": "object",
                                "example": {
                                    "name": "Margherita",
                                    "Parent_Category_id": 2
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "id": {
                                            "type": "integer",
                                            "example": 1
                                        },
                                        "name": {
                                            "type": "string",
                                            "example": "Margherita"
                                        },
                                        "Parent_Category_id": {
                                            "type": "integer",
                                            "example": 2
                                        },
                                        "updated_at": {
                                            "type": "string",
                                            "example": "2023-01-11T09:25:53.000000Z"
                                        },
                                        "created_at": {
                                            "type": "string",
                                            "example": "2023-01-11T09:25:53.000000Z"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "invalid",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "msg": {
                                            "type": "string",
                                            "example": "fail"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/subcategories/show/{id}": {
            "get": {
                "tags": [
                    "Subcategories"
                ],
                "summary": "Get a SubCategory",
                "operationId": "c5620ba22a14f8fa228d12eb39be5a21",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "id": {
                                            "type": "integer",
                                            "example": 1
                                        },
                                        "name": {
                                            "type": "string",
                                            "example": "Margherita"
                                        },
                                        "Parent_Category_id": {
                                            "type": "integer",
                                            "example": 2
                                        },
                                        "created_at": {
                                            "type": "string",
                                            "example": "2023-01-01T22:45:03.000000Z"
                                        },
                                        "updated_at": {
                                            "type": "string",
                                            "example": "2023-01-01T22:45:03.000000Z"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "invalid",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "msg": {
                                            "type": "string",
                                            "example": "fail"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/subcategories/update/{id}": {
            "put": {
                "tags": [
                    "Subcategories"
                ],
                "summary": "Update a SubCategoy",
                "operationId": "17bff7b913200a7378c19f95cc7dbe0b",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "": {
                                        "properties": {
                                            "name": {
                                                "description": "Name of the subcategory",
                                                "type": "string"
                                            },
                                            "Parent_Category_id": {
                                                "description": "ID of the category who have this subcategory",
                                                "type": "integer"
                                            }
                                        },
                                        "type": "object"
                                    }
                                },
                                "type": "object",
                                "example": {
                                    "name": "Margherita 1",
                                    "Parent_Category_id": 2
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "id": {
                                            "type": "integer",
                                            "example": 1
                                        },
                                        "name": {
                                            "type": "string",
                                            "example": "Margherita 1"
                                        },
                                        "Parent_Category_id": {
                                            "type": "integer",
                                            "example": 2
                                        },
                                        "updated_at": {
                                            "type": "string",
                                            "example": "2023-01-11T09:25:53.000000Z"
                                        },
                                        "created_at": {
                                            "type": "string",
                                            "example": "2023-01-11T09:25:53.000000Z"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "invalid",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "msg": {
                                            "type": "string",
                                            "example": "fail"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/subcategories/delete/{id}": {
            "delete": {
                "tags": [
                    "Subcategories"
                ],
                "summary": "Delete a SubCategory",
                "operationId": "1465219460bfd6f3256ef3da4059b38e",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "success"
                    },
                    "400": {
                        "description": "invalid",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "msg": {
                                            "type": "string",
                                            "example": "fail"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/auth/login": {
            "post": {
                "tags": [
                    "Authentication"
                ],
                "summary": "Login",
                "description": "Login",
                "operationId": "224ca9cc21e92b4e3291419882455b09",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "email": {
                                        "type": "string",
                                        "example": "first@example.com"
                                    },
                                    "password": {
                                        "type": "string",
                                        "example": "password123"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Login"
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "404": {
                        "description": "Resource Not Found"
                    }
                }
            }
        },
        "/api/auth/register": {
            "post": {
                "tags": [
                    "Authentication"
                ],
                "summary": "Register User",
                "description": "Register New User",
                "operationId": "47d5ee6b3638073a988b692b1a5902cf",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "example": "Jhon Doe"
                                    },
                                    "email": {
                                        "type": "string",
                                        "example": "jhondoe@example.com"
                                    },
                                    "password": {
                                        "type": "string",
                                        "example": "123456jhon"
                                    },
                                    "password_confirmation": {
                                        "type": "string",
                                        "example": "123456jhon"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Register New User Data"
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "404": {
                        "description": "Resource Not Found"
                    }
                }
            }
        },
        "/api/auth/me": {
            "get": {
                "tags": [
                    "Authentication"
                ],
                "summary": "Authenticated User Profile",
                "description": "Authenticated User Profile",
                "operationId": "8c6eb38d8f7bd492c2c8fc1ed239a6b2",
                "responses": {
                    "200": {
                        "description": "Authenticated User Profile"
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "404": {
                        "description": "Resource Not Found"
                    }
                },
                "security": [
                    {
                        "bearer": []
                    }
                ]
            }
        },
        "/api/auth/logout": {
            "post": {
                "tags": [
                    "Authentication"
                ],
                "summary": "Logout",
                "description": "Logout",
                "operationId": "53d83c37c7970aebebdc61ca4971d22e",
                "responses": {
                    "200": {
                        "description": "Logout"
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "404": {
                        "description": "Resource Not Found"
                    }
                }
            }
        },
        "/api/auth/refresh": {
            "post": {
                "tags": [
                    "Authentication"
                ],
                "summary": "Refresh",
                "description": "Refresh",
                "operationId": "f421a1406c9117b2dc424b29281aa38a",
                "responses": {
                    "200": {
                        "description": "Refresh"
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "404": {
                        "description": "Resource Not Found"
                    }
                },
                "security": [
                    {
                        "bearer": []
                    }
                ]
            }
        }
    }
}